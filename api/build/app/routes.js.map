{"version":3,"sources":["app/routes.ts"],"names":[],"mappings":";AAAA,MAAY,OAAO,WAAM,SAAS,CAAC,CAAA;AAEnC,MAAY,kBAAkB,WAAM,mCAAmC,CAAC,CAAA;AACxE,MAAY,kBAAkB,WAAM,mCAAmC,CAAC,CAAA;AACxE,wBAAuB,gBAAgB,CAAC,CAAA;AACxC,MAAY,aAAa,WAAM,kBAAkB,CAAC,CAAA;AAElD,MAAM,WAAW,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAMpD;;;GAGG;AACH,mBAA0B,GAAwB;IAChD,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC;IAE/C,GAAG,CAAC,GAAG,CAAC,UAAU,GAAG,EAAE,GAAG,EAAE,IAAI;QAC9B,uCAAuC;QACvC,GAAG,CAAC,SAAS,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;QAElD,oCAAoC;QACpC,GAAG,CAAC,SAAS,CAAC,8BAA8B,EAAE,wBAAwB,CAAC,CAAC;QAExE,mCAAmC;QACnC,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IACnC,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;IAC5C,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IAEpC,MAAM,UAAU,GAAG,IAAI,eAAU,EAAE,CAAC;IAEpC,GAAG,CAAC,OAAO,CAAC,GAAG,IAAI,WAAW,CAAC;QAC7B,KAAK,EAAE,UAAU;QACjB,KAAK,EAAE,IAAI;QACX,mBAAmB,EAAE,UAAU,CAAC,mBAAmB;KACpD,CAAC,CAAC;IAEH,8BAA8B;IAC9B,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAE9C,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC;SACnB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAE9D,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC;SACnB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,kBAAkB,CAAC,KAAK,CAAC,CAAC;AAEhE,CAAC;AAnCe,iBAAS,YAmCxB,CAAA;AAAA,CAAC","file":"routes.js","sourcesContent":["import * as express from \"express\";\n\nimport * as bookingsController from \"./controllers/bookings-controller\";\nimport * as calendarController from \"./controllers/calendar-controller\";\nimport OAuthModel from \"./models/oauth\";\nimport * as errorHandlers from \"./error-handlers\";\n\nconst OAuthServer = require(\"express-oauth-server\");\n\nexport interface OAuthApp extends express.Application {\n  oauth: any;\n}\n\n/**\n * Configure the app routes\n * @param {express.Application} app An Express app\n */\nexport function configure(app: express.Application) {\n  app.use(express.static(__dirname + \"/public\"));\n\n  app.use(function (req, res, next) {\n    // Website you wish to allow to connect\n    res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n\n    // Request methods you wish to allow\n    res.setHeader(\"Access-Control-Allow-Methods\", \"GET, POST, PUT, DELETE\");\n\n    // Pass to next layer of middleware\n    next();\n  });\n\n  app.use(errorHandlers.errorLogger);\n  app.use(errorHandlers.resourceErrorHandler);\n  app.use(errorHandlers.errorHandler);\n\n  const oauthModel = new OAuthModel();\n\n  app[\"oauth\"] = new OAuthServer({\n    model: oauthModel,\n    debug: true,\n    accessTokenLifetime: oauthModel.accessTokenLifetime\n  });\n\n  // Handle token grant requests\n  app.all(\"/oauth/token\", app[\"oauth\"].token());\n\n  app.route(\"/bookings\")\n    .get(app[\"oauth\"].authenticate(), bookingsController.index);\n\n  app.route(\"/calendar\")\n    .get(app[\"oauth\"].authenticate(), calendarController.index);\n\n};\n"]}