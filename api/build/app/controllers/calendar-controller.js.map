{"version":3,"sources":["app/controllers/calendar-controller.ts"],"names":[],"mappings":";AACA,MAAY,MAAM,WAAM,QAAQ,CAAC,CAAA;AAEjC,2BAA+B,aAAa,CAAC,CAAA;AAC7C,2BAA6C,0BAA0B,CAAC,CAAA;AACxE,yBAAmB,WAAW,CAAC,CAAA;AAE/B,eAAsB,GAAoB,EAAE,GAAqB,EAAE,IAA0B;IAC3F,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;IAEzC,MAAM,KAAK,GAAG,MAAM,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACtC,MAAM,GAAG,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,gBAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IAEjE,yBAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,EAAE,EAAC,OAAA,KAAK,EAAE,KAAA,GAAG,EAAC,CAAC;SACvD,IAAI,CAAC,QAAQ;QACZ,GAAG,CAAC,IAAI,CAAC,mBAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC;SACD,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACxB,CAAC;AAXe,aAAK,QAWpB,CAAA;AAED,yBAAgC,GAAoB,EAAE,GAAqB,EAAE,IAA0B;IACrG,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;IAEzC,MAAM,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAEhD,yBAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,EAAE,EAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAC,CAAC;SACjE,IAAI,CAAC,QAAQ;QACZ,GAAG,CAAC,IAAI,CAAC,6BAAkB,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC;SACD,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACxB,CAAC;AAVe,uBAAe,kBAU9B,CAAA","file":"calendar-controller.js","sourcesContent":["import * as express from \"express\";\nimport * as moment from \"moment\";\n\nimport { bookingService } from \"../services\";\nimport { getDates, getDayAvailability } from \"../transformers/calendar\";\nimport config from \"../config\";\n\nexport function index(req: express.Request, res: express.Response, next: express.NextFunction): void {\n  const user = res.locals.oauth.token.user;\n\n  const start = moment().startOf(\"day\");\n  const end = start.clone().add(config.calendar.daysAhead, \"days\");\n\n  bookingService.fetchBookingsForUser(user.id, {start, end})\n    .then(bookings => {\n      res.json(getDates(start, end, bookings));\n    })\n    .catch(console.log);\n}\n\nexport function dayAvailability(req: express.Request, res: express.Response, next: express.NextFunction): void {\n  const user = res.locals.oauth.token.user;\n\n  const day = moment(\"2016-10-07\").startOf(\"day\");\n\n  bookingService.fetchBookingsForUser(user.id, {start: day, end: day})\n    .then(bookings => {\n      res.json(getDayAvailability(day, bookings));\n    })\n    .catch(console.log);\n}"]}